<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.noodle.orm.mapper.DictionaryMapper">
  <resultMap id="BaseResultMap" type="org.noodle.orm.model.Dictionary">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="valid_flag" jdbcType="CHAR" property="validFlag" />
    <result column="public_flag" jdbcType="CHAR" property="publicFlag" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from dictionary
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.noodle.orm.model.Dictionary">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into dictionary (id, name, publisher, 
      valid_flag, public_flag)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{publisher,jdbcType=VARCHAR}, 
      #{validFlag,jdbcType=CHAR}, #{publicFlag,jdbcType=CHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.noodle.orm.model.Dictionary">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update dictionary
    set name = #{name,jdbcType=VARCHAR},
      publisher = #{publisher,jdbcType=VARCHAR},
      valid_flag = #{validFlag,jdbcType=CHAR},
      public_flag = #{publicFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, name, publisher, valid_flag, public_flag
    from dictionary
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, name, publisher, valid_flag, public_flag
    from dictionary
  </select>
  <select id="selectAllByUser" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      查询用户所有关联的词典
    -->
    select id, name, publisher, valid_flag, public_flag
    from dictionary
    where exists (select 1 from user_dictionary
                   where user_dictionary.dictionary_id=dictionary.id
                     and user_dictionary.user_id = #{userId,jdbcType=BIGINT})
  </select>
  <select id="selectValidByUser" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      查询用户关联的有效词典
    -->
    select id, name, publisher, valid_flag, public_flag
    from dictionary
    where valid_flag = 'Y'
    and exists ( select 1 from user_dictionary
                  where user_dictionary.dictionary_id=dictionary.id
                  and user_dictionary.user_id = #{userId,jdbcType=BIGINT})
  </select>
  <select id="selectPublicByCondition" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      根据名称条件查询有效的公用词典
    -->
    select id, name, publisher, valid_flag, public_flag
    from dictionary
    where valid_flag = 'Y'
    and public_flag = 'Y'
    and name like #{nameCondition,jdbcType=VARCHAR}
  </select>
</mapper>